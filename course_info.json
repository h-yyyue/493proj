[
    {
    "department" : "EECS",
    "number" : "183",
    "name" : "Elementary Programming Concepts",
    "grade" : "A",
    "credits" : "4.0",
    "score" : "83",
    "favorite" : "no",
    "taken" : "no",
    "description" : "Fundamental concepts and skills of programming in a high level language. Flow of control: selection, iteration, subprograms. Data structures: strings, arrays, records, lists, tables. Algorithms using selection and iterations (decision making, finding maxima/minima, searching, sorting, simulation, etc.). Good program design, structure, and style are emphasized. Testing and debugging. Not intended for Engineering students (who should take ENGR 101), nor for CS majors who qualify for EECS 280."
    }, 
    {
    "department" : "EECS",
    "number" : "110",
    "name" : "Discover CS",
    "grade" : "A+",
    "credits" : "2.0",
    "score" : "67",
    "favorite" : "no",
    "taken" : "no",
    "description" : "Discover Computer Science --- Introduction to basic CS concepts (variables, conditionals, loops, functions) using an introductory programming language, such a Python. Students interact with researchers and computing professionals to learn about real-world, interdisciplinary applications of CS. Intended for students without prior programming experience to (optionally take prior to EECS 183 or ENGR 101."
    }, 
    {
    "department" : "EECS",
    "number" : "198",
    "name" : "Special Topics",
    "grade" : "A",
    "credits" : "1.0-4.0",
    "score" : "95",
    "favorite" : "no",
    "taken" : "no",
    "description" : "Topics of current interest selected by the faculty."
    }, 
    {
    "department" : "EECS",
    "number" : "200",
    "name" : "Elec Eng Sys Des I",
    "grade" : "A",
    "credits" : "2.0",
    "score" : "59",
    "favorite" : "no",
    "taken" : "no",
    "description" : "Electrical Engineering Systems Design I --- Gain a systems engineering perspective of electrical engineering centered around a design competition to address a societally-relevant challenge. Apply electrical engineering concepts in circuits, computing, control, sensors, optics, power, signal processing, and wireless communications to a system such as a robot and adapt the system to achieve competition objectives within defined engineering constraints. Projects are overseen and graded by faculty and may also involve mentoring by representatives from industrial, governmental and/or non-profit organizations."
    }, 
    {
    "department" : "EECS",
    "number" : "201",
    "name" : "Computer Science Pragmatics",
    "grade" : "A+",
    "credits" : "1.0",
    "favorite" : "no",
    "taken" : "no",
    "description" : "Designed to teach the essentials of using a computer effectively. Topics covered include shells, environment, scripting, Makefiles, compilers, debugging tools, and version control."
    }
]